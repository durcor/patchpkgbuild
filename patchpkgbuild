#!/bin/sh
# shellcheck disable=2016

while getopts 'rh' c; do
    case $c in
        r)
            echo "Reseting PKGBUILD"
            sed -i '/# PATCH/d' PKGBUILD
            exit 0
            ;;
        h)
            echo "Usage: $0 <patch file>..." 1>&2
            exit 0
            ;;
        *)
            exit 1
    esac
done
shift $((OPTIND - 1))

if [ ! "$1" ]; then
    echo "Usage: $0 <patch file>..." 1>&2
    exit 0
elif [ ! -f PKGBUILD ]; then
    echo "Error: No PKGBUILD found in '$PWD'" 1>&2
    exit 1
fi

echo "Modifying PKGBUILD"
patch_cmd='cd ${pkgname};'
# TODO: Add support for remote patches
for patch in "$@"; do
    if [ -f "$patch" ]; then
        patch_cmd="$patch_cmd patch -Np1 -i ..\/$(basename "$patch"); msg2 \"Patching $patch\";"
        [ "$source_array" ] && source_array="$source_array "
        source_array="$source_array'$patch'"
        [ "$sum_array" ] && sum_array="$sum_array "
        sum_array="$sum_array'$(sha512sum "$patch" | cut -d' ' -f1)'"
    elif echo "$patch" | grep -q "^https*://"; then
        patch_cmd="$patch_cmd patch -Np1 -i ..\/$(basename "$patch"); msg2 \"Patching $patch\";"
        [ "$source_array" ] && source_array="$source_array "
        source_array="$source_array'$patch'"
        [ "$sum_array" ] && sum_array="$sum_array "
        sum_array="$sum_array'$(curl "$patch" | sha512sum | cut -d' ' -f1)'"
    else
        echo "Warning: Patch file '$patch' not found." 1>&2
    fi
done
patch_cmd="$patch_cmd cd ..;"
[ "$source_array" ] && {
    sed -i -e "s/^build *() *\n*{/build() {\n    $patch_cmd # PATCH/" PKGBUILD
    echo "source+=($source_array) # PATCH" >> PKGBUILD
    echo "sha512sums+=($sum_array) # PATCH" >> PKGBUILD
}

# Require makepkg to be called separately for now.
# makepkg -sif
